/**    
 * 建造者模式
 * 
 * 将一个复杂的构建与其表示相分离，使得同样的构建过程可以创建不同的表示
 * 
 * 与抽象工厂的区别：在建造者模式里，有个指导者，由指导者来管理建造者，用户是与指导者联系的，指导者联系建造者最后得到产品。即建造模式可以强制实行一种分步骤进行的建造过程。
 * 
 * 建造者模式结构组成

Product: 表示被构造的复杂对象,其中包含需要构建的部件属性。
Builder: 创建一个产品对象的各个部件指定抽象接口。
ConcreteBuilder： 实现Builder的接口以构造和装配该产品的各个部件，定义并明确它所创建的表示。
Director： 调用具体建造者角色以创建产品对象。

拿造车为例：
车可以分为汽车、火车、摩托车等等
他们都有共性：发动机、轮胎、座椅等等
 */
package com.xs.my.design.patterns.createtype.builder;