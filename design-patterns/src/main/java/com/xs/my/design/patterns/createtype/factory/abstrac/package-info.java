/**
 * 抽象工厂模式
 * 
 * Abstract Factory Pattern 抽象工厂模式

工厂创建一种产品，抽象工厂创建的是一组产品，是一个产品系列。这里要注意的是“系列”的意思，也就是说，抽象工厂创建出的一组产品是成套的。

当你发现，[有一个接口]可以有多种实现的时候，可以考虑使用工厂方法来创建实例。

当你发现，[有一组接口]可以有多种实现方案的时候，可以考虑使用抽象工厂创建实例组。
抽象工厂模式（Abstract Factory Pattern）是围绕一个超级工厂创建其他工厂。该超级工厂又称为其他工厂的工厂。

属于创建型模式，它提供了一种创建对象的最佳方式。

在抽象工厂模式中，接口是负责创建一个相关对象的工厂，不需要显式指定它们的类。每个生成的工厂都能按照工厂模式提供对象。



简单工厂：

工厂类直接实现，一个产品抽象类，一个工厂类可以产生多种产品

工厂方法：

一个抽象工厂类，一个产品抽象类，一个工厂类产生一种产品

抽象工厂：

一个抽象工厂类，多个产品抽象类。一个工厂类可以产生一系列产品族的产品

 */
package com.xs.my.design.patterns.createtype.factory.abstrac;